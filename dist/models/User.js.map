{"version":3,"sources":["../../src/models/User.ts"],"sourcesContent":["import { t as Type } from 'elysia'\nimport { Schema, Types } from 'mongoose'\n\nimport { collectionsData } from '@/constants/config'\n\nimport { setDefaultSettingsSchema } from '@/shared/set-default-settings-schema'\nimport { connectDB } from '@/shared/connection-db'\n\nexport const UserSchema = {\n  body: Type.Object({\n    name: Type.String(),\n    surname: Type.String(),\n    email: Type.String({ format: 'email' }),\n    password: Type.String({ minLength: 6 }),\n    photo: Type.Optional(Type.String()),\n    company: Type.Array(\n      Type.Object({\n        id: Type.String(),\n        name: Type.String(),\n        cnpj: Type.String()\n      })\n    ),\n    plan: Type.Enum({ Free: 'Free', Pro: 'Pro' })\n  })\n}\n\nexport type IUser = typeof UserSchema.body.static & {\n  permissions?: string[]\n  comparePassword?: (password: string) => Promise<boolean>\n  resetPasswordToken?: string\n  resetPasswordExpires?: Date\n}\n\nconst SchemaModel = new Schema<IUser>(\n  {\n    name: {\n      type: String,\n      required: true\n    },\n    surname: {\n      type: String,\n      required: true\n    },\n    email: {\n      type: String,\n      required: true,\n      unique: true\n    },\n    password: {\n      type: String,\n      required: true\n    },\n    permissions: {\n      type: [String],\n      default: ['user']\n    },\n    photo: String,\n    company: [\n      {\n        id: {\n          type: Types.ObjectId,\n          required: true,\n          ref: collectionsData.Company.name\n        },\n        name: {\n          type: String,\n          required: true\n        },\n        cnpj: {\n          type: String,\n          required: true\n        }\n      }\n    ],\n    plan: {\n      type: String,\n      enum: ['Free', 'Pro'],\n      default: 'Free'\n    },\n    resetPasswordToken: String,\n    resetPasswordExpires: Date\n  },\n  {\n    timestamps: true,\n    collection: collectionsData.User.collection\n  }\n)\n\nsetDefaultSettingsSchema(SchemaModel)\n\nSchemaModel.methods.comparePassword = function (this: IUser, password: string) {\n  return Bun.password.verify(password, this.password)\n}\n\nexport const User = connectDB.model<IUser>(collectionsData.User.name, SchemaModel)\n"],"names":["User","UserSchema","body","Type","Object","name","String","surname","email","format","password","minLength","photo","Optional","company","Array","id","cnpj","plan","Enum","Free","Pro","SchemaModel","Schema","type","required","unique","permissions","default","Types","ObjectId","ref","collectionsData","Company","enum","resetPasswordToken","resetPasswordExpires","Date","timestamps","collection","setDefaultSettingsSchema","methods","comparePassword","Bun","verify","connectDB","model"],"mappings":";;;;;;;;;;;IA8FaA,IAAI;eAAJA;;IAtFAC,UAAU;eAAVA;;;wBARa;0BACI;wBAEE;0CAES;8BACf;AAEnB,MAAMA,aAAa;IACxBC,MAAMC,SAAI,CAACC,MAAM,CAAC;QAChBC,MAAMF,SAAI,CAACG,MAAM;QACjBC,SAASJ,SAAI,CAACG,MAAM;QACpBE,OAAOL,SAAI,CAACG,MAAM,CAAC;YAAEG,QAAQ;QAAQ;QACrCC,UAAUP,SAAI,CAACG,MAAM,CAAC;YAAEK,WAAW;QAAE;QACrCC,OAAOT,SAAI,CAACU,QAAQ,CAACV,SAAI,CAACG,MAAM;QAChCQ,SAASX,SAAI,CAACY,KAAK,CACjBZ,SAAI,CAACC,MAAM,CAAC;YACVY,IAAIb,SAAI,CAACG,MAAM;YACfD,MAAMF,SAAI,CAACG,MAAM;YACjBW,MAAMd,SAAI,CAACG,MAAM;QACnB;QAEFY,MAAMf,SAAI,CAACgB,IAAI,CAAC;YAAEC,MAAM;YAAQC,KAAK;QAAM;IAC7C;AACF;AASA,MAAMC,cAAc,IAAIC,gBAAM,CAC5B;IACElB,MAAM;QACJmB,MAAMlB;QACNmB,UAAU;IACZ;IACAlB,SAAS;QACPiB,MAAMlB;QACNmB,UAAU;IACZ;IACAjB,OAAO;QACLgB,MAAMlB;QACNmB,UAAU;QACVC,QAAQ;IACV;IACAhB,UAAU;QACRc,MAAMlB;QACNmB,UAAU;IACZ;IACAE,aAAa;QACXH,MAAM;YAAClB;SAAO;QACdsB,SAAS;YAAC;SAAO;IACnB;IACAhB,OAAON;IACPQ,SAAS;QACP;YACEE,IAAI;gBACFQ,MAAMK,eAAK,CAACC,QAAQ;gBACpBL,UAAU;gBACVM,KAAKC,uBAAe,CAACC,OAAO,CAAC5B,IAAI;YACnC;YACAA,MAAM;gBACJmB,MAAMlB;gBACNmB,UAAU;YACZ;YACAR,MAAM;gBACJO,MAAMlB;gBACNmB,UAAU;YACZ;QACF;KACD;IACDP,MAAM;QACJM,MAAMlB;QACN4B,MAAM;YAAC;YAAQ;SAAM;QACrBN,SAAS;IACX;IACAO,oBAAoB7B;IACpB8B,sBAAsBC;AACxB,GACA;IACEC,YAAY;IACZC,YAAYP,uBAAe,CAAChC,IAAI,CAACuC,UAAU;AAC7C;AAGFC,IAAAA,kDAAwB,EAAClB;AAEzBA,YAAYmB,OAAO,CAACC,eAAe,GAAG,SAAuBhC,QAAgB;IAC3E,OAAOiC,IAAIjC,QAAQ,CAACkC,MAAM,CAAClC,UAAU,IAAI,CAACA,QAAQ;AACpD;AAEO,MAAMV,OAAO6C,uBAAS,CAACC,KAAK,CAAQd,uBAAe,CAAChC,IAAI,CAACK,IAAI,EAAEiB"}