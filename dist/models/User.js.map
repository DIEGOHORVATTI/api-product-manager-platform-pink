{"version":3,"sources":["../../src/models/User.ts"],"sourcesContent":["import { t as Type } from 'elysia'\nimport { Schema, Types } from 'mongoose'\n\nimport { collectionsData } from '@/constants/config'\n\nimport { setDefaultSettingsSchema } from '@/shared/set-default-settings-schema'\nimport { connectDB } from '@/shared/connection-db'\n\nexport const UserSchema = {\n  body: Type.Object({\n    name: Type.String(),\n    surname: Type.String(),\n    email: Type.String({ format: 'email' }),\n    password: Type.String({ minLength: 6 }),\n    photo: Type.Optional(Type.String()),\n    company: Type.Optional(\n      Type.Array(\n        Type.Object({\n          id: Type.String(),\n          name: Type.String(),\n          cnpj: Type.String()\n        })\n      )\n    ),\n    plan: Type.Enum({ Free: 'Free', Pro: 'Pro' })\n  })\n}\n\nexport type IUser = typeof UserSchema.body.static & {\n  permissions?: string[]\n  comparePassword?: (password: string) => Promise<boolean>\n  resetPasswordToken?: string\n  resetPasswordExpires?: Date\n}\n\nconst SchemaModel = new Schema<IUser>(\n  {\n    name: {\n      type: String,\n      required: true\n    },\n    surname: {\n      type: String,\n      required: true\n    },\n    email: {\n      type: String,\n      required: true,\n      unique: true\n    },\n    password: {\n      type: String,\n      required: true\n    },\n    permissions: {\n      type: [String],\n      default: ['user']\n    },\n    photo: String,\n    company: {\n      type: [\n        {\n          id: {\n            type: String,\n            required: true\n          },\n          name: {\n            type: String,\n            required: true\n          },\n          cnpj: {\n            type: String,\n            required: true\n          }\n        }\n      ]\n    },\n    plan: {\n      type: String,\n      enum: ['Free', 'Pro'],\n      default: 'Free'\n    },\n    resetPasswordToken: String,\n    resetPasswordExpires: Date\n  },\n  {\n    timestamps: true,\n    collection: collectionsData.User.collection\n  }\n)\n\nsetDefaultSettingsSchema(SchemaModel)\n\nSchemaModel.methods.comparePassword = function (this: IUser, password: string) {\n  return Bun.password.verify(password, this.password)\n}\n\nexport const User = connectDB.model<IUser>(collectionsData.User.name, SchemaModel)\n"],"names":["User","UserSchema","body","Type","Object","name","String","surname","email","format","password","minLength","photo","Optional","company","Array","id","cnpj","plan","Enum","Free","Pro","SchemaModel","Schema","type","required","unique","permissions","default","enum","resetPasswordToken","resetPasswordExpires","Date","timestamps","collection","collectionsData","setDefaultSettingsSchema","methods","comparePassword","Bun","verify","connectDB","model"],"mappings":";;;;;;;;;;;IAiGaA,IAAI;eAAJA;;IAzFAC,UAAU;eAAVA;;;wBARa;0BACI;wBAEE;0CAES;8BACf;AAEnB,MAAMA,aAAa;IACxBC,MAAMC,SAAI,CAACC,MAAM,CAAC;QAChBC,MAAMF,SAAI,CAACG,MAAM;QACjBC,SAASJ,SAAI,CAACG,MAAM;QACpBE,OAAOL,SAAI,CAACG,MAAM,CAAC;YAAEG,QAAQ;QAAQ;QACrCC,UAAUP,SAAI,CAACG,MAAM,CAAC;YAAEK,WAAW;QAAE;QACrCC,OAAOT,SAAI,CAACU,QAAQ,CAACV,SAAI,CAACG,MAAM;QAChCQ,SAASX,SAAI,CAACU,QAAQ,CACpBV,SAAI,CAACY,KAAK,CACRZ,SAAI,CAACC,MAAM,CAAC;YACVY,IAAIb,SAAI,CAACG,MAAM;YACfD,MAAMF,SAAI,CAACG,MAAM;YACjBW,MAAMd,SAAI,CAACG,MAAM;QACnB;QAGJY,MAAMf,SAAI,CAACgB,IAAI,CAAC;YAAEC,MAAM;YAAQC,KAAK;QAAM;IAC7C;AACF;AASA,MAAMC,cAAc,IAAIC,gBAAM,CAC5B;IACElB,MAAM;QACJmB,MAAMlB;QACNmB,UAAU;IACZ;IACAlB,SAAS;QACPiB,MAAMlB;QACNmB,UAAU;IACZ;IACAjB,OAAO;QACLgB,MAAMlB;QACNmB,UAAU;QACVC,QAAQ;IACV;IACAhB,UAAU;QACRc,MAAMlB;QACNmB,UAAU;IACZ;IACAE,aAAa;QACXH,MAAM;YAAClB;SAAO;QACdsB,SAAS;YAAC;SAAO;IACnB;IACAhB,OAAON;IACPQ,SAAS;QACPU,MAAM;YACJ;gBACER,IAAI;oBACFQ,MAAMlB;oBACNmB,UAAU;gBACZ;gBACApB,MAAM;oBACJmB,MAAMlB;oBACNmB,UAAU;gBACZ;gBACAR,MAAM;oBACJO,MAAMlB;oBACNmB,UAAU;gBACZ;YACF;SACD;IACH;IACAP,MAAM;QACJM,MAAMlB;QACNuB,MAAM;YAAC;YAAQ;SAAM;QACrBD,SAAS;IACX;IACAE,oBAAoBxB;IACpByB,sBAAsBC;AACxB,GACA;IACEC,YAAY;IACZC,YAAYC,uBAAe,CAACnC,IAAI,CAACkC,UAAU;AAC7C;AAGFE,IAAAA,kDAAwB,EAACd;AAEzBA,YAAYe,OAAO,CAACC,eAAe,GAAG,SAAuB5B,QAAgB;IAC3E,OAAO6B,IAAI7B,QAAQ,CAAC8B,MAAM,CAAC9B,UAAU,IAAI,CAACA,QAAQ;AACpD;AAEO,MAAMV,OAAOyC,uBAAS,CAACC,KAAK,CAAQP,uBAAe,CAACnC,IAAI,CAACK,IAAI,EAAEiB"}