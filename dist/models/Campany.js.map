{"version":3,"sources":["../../src/models/Campany.ts"],"sourcesContent":["import { t as Type } from 'elysia'\nimport { Schema } from 'mongoose'\n\nimport { collectionsData } from '@/constants/config'\n\nimport { setDefaultSettingsSchema, connectDB } from '@/shared'\n\nexport const CompanySchema = {\n  body: Type.Object({\n    name: Type.String(),\n    cnpj: Type.String(),\n    about: Type.Optional(Type.String())\n  })\n}\n\nexport type ICompany = typeof CompanySchema.body.static\n\nconst CompanySchemaModel = new Schema<ICompany>(\n  {\n    name: {\n      type: String,\n      required: true\n    },\n    cnpj: {\n      type: String,\n      required: true,\n      unique: true\n    },\n    about: {\n      type: String\n    }\n  },\n  {\n    timestamps: true,\n    collection: collectionsData.Company.collection\n  }\n)\n\nsetDefaultSettingsSchema(CompanySchemaModel)\n\nexport const Company = connectDB.model<ICompany>(collectionsData.Company.name, CompanySchemaModel)\n"],"names":["Company","CompanySchema","body","Type","Object","name","String","cnpj","about","Optional","CompanySchemaModel","Schema","type","required","unique","timestamps","collection","collectionsData","setDefaultSettingsSchema","connectDB","model"],"mappings":"2MAwCaA,OAAO,mBAAPA,SAjCAC,aAAa,mBAAbA,uCAPa,kCACH,kCAES,6CAEoB,aAE7C,MAAMA,cAAgB,CAC3BC,KAAMC,SAAI,CAACC,MAAM,CAAC,CAChBC,KAAMF,SAAI,CAACG,MAAM,GACjBC,KAAMJ,SAAI,CAACG,MAAM,GACjBE,MAAOL,SAAI,CAACM,QAAQ,CAACN,SAAI,CAACG,MAAM,GAClC,EACF,EAIA,MAAMI,mBAAqB,IAAIC,gBAAM,CACnC,CACEN,KAAM,CACJO,KAAMN,OACNO,SAAU,IACZ,EACAN,KAAM,CACJK,KAAMN,OACNO,SAAU,KACVC,OAAQ,IACV,EACAN,MAAO,CACLI,KAAMN,MACR,CACF,EACA,CACES,WAAY,KACZC,WAAYC,uBAAe,CAACjB,OAAO,CAACgB,UAAU,AAChD,GAGFE,GAAAA,gCAAwB,EAACR,oBAElB,MAAMV,QAAUmB,iBAAS,CAACC,KAAK,CAAWH,uBAAe,CAACjB,OAAO,CAACK,IAAI,CAAEK"}