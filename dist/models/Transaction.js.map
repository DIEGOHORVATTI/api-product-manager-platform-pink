{"version":3,"sources":["../../src/models/Transaction.ts"],"sourcesContent":["import { t as Type } from 'elysia'\nimport { Schema, Types } from 'mongoose'\n\nimport { collectionsData } from '@/constants/config'\nimport { setDefaultSettingsSchema } from '@/shared/set-default-settings-schema'\nimport { connectDB } from '@/shared/connection-db'\n\nexport const TransactionSchema = {\n  body: Type.Object({\n    userId: Type.String().objectId(),\n    plan: Type.Enum({ Free: 'Free', Pro: 'Pro' }),\n    paymentMethod: Type.Enum({ pix: 'pix', credit_card: 'credit_card' }),\n    status: Type.Enum({ pending: 'pending', completed: 'completed', failed: 'failed' }),\n    amount: Type.Number()\n  })\n}\n\nexport type ITransaction = typeof TransactionSchema.body.static & {\n  paymentDate: Date\n}\n\nconst SchemaModel = new Schema<ITransaction>(\n  {\n    userId: {\n      type: Types.ObjectId,\n      required: true,\n      ref: collectionsData.User.name\n    },\n    plan: {\n      type: String,\n      enum: ['Free', 'Pro'],\n      required: true\n    },\n    paymentMethod: {\n      type: String,\n      enum: ['pix', 'credit_card'],\n      required: true\n    },\n    status: {\n      type: String,\n      enum: ['pending', 'completed', 'failed'],\n      required: true\n    },\n    amount: {\n      type: Number,\n      required: true\n    },\n    paymentDate: {\n      type: Date,\n      default: Date.now\n    }\n  },\n  {\n    timestamps: true,\n    collection: collectionsData.Transaction.collection\n  }\n)\n\nsetDefaultSettingsSchema(SchemaModel)\n\nexport const Transaction = connectDB.model<ITransaction>(collectionsData.Transaction.name, SchemaModel)\n"],"names":["Transaction","TransactionSchema","body","Type","Object","userId","String","objectId","plan","Enum","Free","Pro","paymentMethod","pix","credit_card","status","pending","completed","failed","amount","Number","SchemaModel","Schema","type","Types","ObjectId","required","ref","collectionsData","User","name","enum","paymentDate","Date","default","now","timestamps","collection","setDefaultSettingsSchema","connectDB","model"],"mappings":"2MA4DaA,WAAW,mBAAXA,aArDAC,iBAAiB,mBAAjBA,2CAPa,kCACI,kCAEE,+DACS,qEACf,2BAEnB,MAAMA,kBAAoB,CAC/BC,KAAMC,SAAI,CAACC,MAAM,CAAC,CAChBC,OAAQF,SAAI,CAACG,MAAM,GAAGC,QAAQ,GAC9BC,KAAML,SAAI,CAACM,IAAI,CAAC,CAAEC,KAAM,OAAQC,IAAK,KAAM,GAC3CC,cAAeT,SAAI,CAACM,IAAI,CAAC,CAAEI,IAAK,MAAOC,YAAa,aAAc,GAClEC,OAAQZ,SAAI,CAACM,IAAI,CAAC,CAAEO,QAAS,UAAWC,UAAW,YAAaC,OAAQ,QAAS,GACjFC,OAAQhB,SAAI,CAACiB,MAAM,EACrB,EACF,EAMA,MAAMC,YAAc,IAAIC,gBAAM,CAC5B,CACEjB,OAAQ,CACNkB,KAAMC,eAAK,CAACC,QAAQ,CACpBC,SAAU,KACVC,IAAKC,uBAAe,CAACC,IAAI,CAACC,IAAI,AAChC,EACAtB,KAAM,CACJe,KAAMjB,OACNyB,KAAM,CAAC,OAAQ,MAAM,CACrBL,SAAU,IACZ,EACAd,cAAe,CACbW,KAAMjB,OACNyB,KAAM,CAAC,MAAO,cAAc,CAC5BL,SAAU,IACZ,EACAX,OAAQ,CACNQ,KAAMjB,OACNyB,KAAM,CAAC,UAAW,YAAa,SAAS,CACxCL,SAAU,IACZ,EACAP,OAAQ,CACNI,KAAMH,OACNM,SAAU,IACZ,EACAM,YAAa,CACXT,KAAMU,KACNC,QAASD,KAAKE,GAAG,AACnB,CACF,EACA,CACEC,WAAY,KACZC,WAAYT,uBAAe,CAAC5B,WAAW,CAACqC,UAAU,AACpD,GAGFC,GAAAA,kDAAwB,EAACjB,aAElB,MAAMrB,YAAcuC,uBAAS,CAACC,KAAK,CAAeZ,uBAAe,CAAC5B,WAAW,CAAC8B,IAAI,CAAET"}