{"version":3,"sources":["../../src/models/Transaction.ts"],"sourcesContent":["import { t as Type } from 'elysia'\nimport { Schema, Types } from 'mongoose'\n\nimport { collectionsData } from '@/constants/config'\nimport { setDefaultSettingsSchema } from '@/shared/set-default-settings-schema'\nimport { connectDB } from '@/shared/connection-db'\n\nexport const TransactionSchema = {\n  body: Type.Object({\n    userId: Type.String().objectId(),\n    plan: Type.Enum({ Free: 'Free', Pro: 'Pro' }),\n    paymentMethod: Type.Enum({ pix: 'pix', credit_card: 'credit_card' }),\n    status: Type.Enum({ pending: 'pending', completed: 'completed', failed: 'failed' }),\n    amount: Type.Number()\n  })\n}\n\nexport type ITransaction = typeof TransactionSchema.body.static & {\n  paymentDate: Date\n}\n\nconst SchemaModel = new Schema<ITransaction>(\n  {\n    userId: {\n      type: Types.ObjectId,\n      required: true,\n      ref: collectionsData.User.name\n    },\n    plan: {\n      type: String,\n      enum: ['Free', 'Pro'],\n      required: true\n    },\n    paymentMethod: {\n      type: String,\n      enum: ['pix', 'credit_card'],\n      required: true\n    },\n    status: {\n      type: String,\n      enum: ['pending', 'completed', 'failed'],\n      required: true\n    },\n    amount: {\n      type: Number,\n      required: true\n    },\n    paymentDate: {\n      type: Date,\n      default: Date.now\n    }\n  },\n  {\n    timestamps: true,\n    collection: collectionsData.Transaction.collection\n  }\n)\n\nsetDefaultSettingsSchema(SchemaModel)\n\nexport const Transaction = connectDB.model<ITransaction>(collectionsData.Transaction.name, SchemaModel)\n"],"names":["Transaction","TransactionSchema","body","Type","Object","userId","String","objectId","plan","Enum","Free","Pro","paymentMethod","pix","credit_card","status","pending","completed","failed","amount","Number","SchemaModel","Schema","type","Types","ObjectId","required","ref","collectionsData","User","name","enum","paymentDate","Date","default","now","timestamps","collection","setDefaultSettingsSchema","connectDB","model"],"mappings":";;;;;;;;;;;IA4DaA,WAAW;eAAXA;;IArDAC,iBAAiB;eAAjBA;;;wBAPa;0BACI;wBAEE;0CACS;8BACf;AAEnB,MAAMA,oBAAoB;IAC/BC,MAAMC,SAAI,CAACC,MAAM,CAAC;QAChBC,QAAQF,SAAI,CAACG,MAAM,GAAGC,QAAQ;QAC9BC,MAAML,SAAI,CAACM,IAAI,CAAC;YAAEC,MAAM;YAAQC,KAAK;QAAM;QAC3CC,eAAeT,SAAI,CAACM,IAAI,CAAC;YAAEI,KAAK;YAAOC,aAAa;QAAc;QAClEC,QAAQZ,SAAI,CAACM,IAAI,CAAC;YAAEO,SAAS;YAAWC,WAAW;YAAaC,QAAQ;QAAS;QACjFC,QAAQhB,SAAI,CAACiB,MAAM;IACrB;AACF;AAMA,MAAMC,cAAc,IAAIC,gBAAM,CAC5B;IACEjB,QAAQ;QACNkB,MAAMC,eAAK,CAACC,QAAQ;QACpBC,UAAU;QACVC,KAAKC,uBAAe,CAACC,IAAI,CAACC,IAAI;IAChC;IACAtB,MAAM;QACJe,MAAMjB;QACNyB,MAAM;YAAC;YAAQ;SAAM;QACrBL,UAAU;IACZ;IACAd,eAAe;QACbW,MAAMjB;QACNyB,MAAM;YAAC;YAAO;SAAc;QAC5BL,UAAU;IACZ;IACAX,QAAQ;QACNQ,MAAMjB;QACNyB,MAAM;YAAC;YAAW;YAAa;SAAS;QACxCL,UAAU;IACZ;IACAP,QAAQ;QACNI,MAAMH;QACNM,UAAU;IACZ;IACAM,aAAa;QACXT,MAAMU;QACNC,SAASD,KAAKE,GAAG;IACnB;AACF,GACA;IACEC,YAAY;IACZC,YAAYT,uBAAe,CAAC5B,WAAW,CAACqC,UAAU;AACpD;AAGFC,IAAAA,kDAAwB,EAACjB;AAElB,MAAMrB,cAAcuC,uBAAS,CAACC,KAAK,CAAeZ,uBAAe,CAAC5B,WAAW,CAAC8B,IAAI,EAAET"}