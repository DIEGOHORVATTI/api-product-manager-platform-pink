{"version":3,"sources":["../../../src/services/products/create.ts"],"sourcesContent":["import { IUser, User } from '@/models/User'\n\nimport { error } from 'elysia'\nimport { Product } from '../../models/Product'\n\nexport const createProductService = async ({ email, password }: IUser) => {\n  if (await Product.findOne({ email })) {\n    throw error('Conflict', { error: 'Esse e-mail já está cadastrado' })\n  }\n\n  const product = new Product({ email, password })\n\n  await product.save().catch(() => {\n    throw error('Internal Server Error', { error: 'Falha ao criar produto' })\n  })\n\n  return product\n}\n"],"names":["createProductService","email","password","Product","findOne","error","product","save","catch"],"mappings":"oGAKaA,8DAAAA,8CAHS,iCACE,wBAEjB,MAAMA,qBAAuB,MAAO,CAAEC,KAAK,CAAEC,QAAQ,CAAS,IACnE,GAAI,MAAMC,gBAAO,CAACC,OAAO,CAAC,CAAEH,KAAM,GAAI,CACpC,KAAMI,GAAAA,aAAK,EAAC,WAAY,CAAEA,MAAO,gCAAiC,EACpE,CAEA,MAAMC,QAAU,IAAIH,gBAAO,CAAC,CAAEF,MAAOC,QAAS,EAE9C,OAAMI,QAAQC,IAAI,GAAGC,KAAK,CAAC,KACzB,KAAMH,GAAAA,aAAK,EAAC,wBAAyB,CAAEA,MAAO,wBAAyB,EACzE,GAEA,OAAOC,OACT"}