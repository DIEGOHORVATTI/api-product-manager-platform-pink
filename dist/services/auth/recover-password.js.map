{"version":3,"sources":["../../../src/services/auth/recover-password.ts"],"sourcesContent":["import { error } from 'elysia'\n\nimport nodemailer from 'nodemailer'\nimport crypto from 'crypto'\n\nimport { User } from '@/models/User'\n\nconst DAY = 3_600_000\n\nexport const recoverPasswordService = async (email: string) => {\n  const user = await User.findOne({ email })\n\n  if (!user) {\n    throw error('Not Found', { error: 'Usuário não encontrado' })\n  }\n\n  const resetToken = crypto.randomBytes(32).toString('hex')\n\n  const hashedToken = await Bun.password.hash(resetToken)\n\n  user.resetPasswordToken = hashedToken\n  user.resetPasswordExpires = new Date(Date.now() + DAY * 0.5) // 30 minutes\n\n  await user.save().catch(err => {\n    throw error('Internal Server Error', {\n      error: 'Erro ao salvar informações do token',\n      details: err.message\n    })\n  })\n\n  const transporter = nodemailer.createTransport({\n    host: process.env.MAIL_HOST,\n    port: Number(process.env.MAIL_PORT),\n    secure: Number(process.env.MAIL_PORT) === 465,\n    auth: {\n      user: process.env.MAIL_USERNAME,\n      pass: process.env.MAIL_PASSWORD\n    }\n  })\n\n  const resetLink = `${process.env.FRONTEND_URL}/reset-password?token=${resetToken}&email=${email}`\n  await transporter\n    .sendMail({\n      from: process.env.MAIL_USERNAME,\n      to: email,\n      subject: 'Solicitação de redefinição de senha',\n      text: `Você solicitou uma redefinição de senha. Clique no link para redefinir sua senha: ${resetLink}`,\n      html: `<p>Você solicitou uma redefinição de senha.</p>\n             <p>Clique no link abaixo para redefinir sua senha:</p>\n             <a href=\"${resetLink}\">Redefinir senha</a>\n             <p>O link é válido por 30 minutos.</p>`\n    })\n    .catch(err => {\n      throw error('Internal Server Error', {\n        error: 'Falha ao enviar e-mail',\n        details: err.message\n      })\n    })\n\n  return { success: true, message: 'E-mail enviado com sucesso' }\n}\n"],"names":["recoverPasswordService","DAY","email","user","User","findOne","error","resetToken","crypto","randomBytes","toString","hashedToken","Bun","password","hash","resetPasswordToken","resetPasswordExpires","Date","now","save","catch","err","details","message","transporter","nodemailer","createTransport","host","process","env","MAIL_HOST","port","Number","MAIL_PORT","secure","auth","MAIL_USERNAME","pass","MAIL_PASSWORD","resetLink","FRONTEND_URL","sendMail","from","to","subject","text","html","success"],"mappings":";;;;+BASaA;;;eAAAA;;;wBATS;mEAEC;+DACJ;sBAEE;;;;;;AAErB,MAAMC,MAAM;AAEL,MAAMD,yBAAyB,OAAOE;IAC3C,MAAMC,OAAO,MAAMC,UAAI,CAACC,OAAO,CAAC;QAAEH;IAAM;IAExC,IAAI,CAACC,MAAM;QACT,MAAMG,IAAAA,aAAK,EAAC,aAAa;YAAEA,OAAO;QAAyB;IAC7D;IAEA,MAAMC,aAAaC,eAAM,CAACC,WAAW,CAAC,IAAIC,QAAQ,CAAC;IAEnD,MAAMC,cAAc,MAAMC,IAAIC,QAAQ,CAACC,IAAI,CAACP;IAE5CJ,KAAKY,kBAAkB,GAAGJ;IAC1BR,KAAKa,oBAAoB,GAAG,IAAIC,KAAKA,KAAKC,GAAG,KAAKjB,MAAM,KAAK,aAAa;;IAE1E,MAAME,KAAKgB,IAAI,GAAGC,KAAK,CAACC,CAAAA;QACtB,MAAMf,IAAAA,aAAK,EAAC,yBAAyB;YACnCA,OAAO;YACPgB,SAASD,IAAIE,OAAO;QACtB;IACF;IAEA,MAAMC,cAAcC,mBAAU,CAACC,eAAe,CAAC;QAC7CC,MAAMC,QAAQC,GAAG,CAACC,SAAS;QAC3BC,MAAMC,OAAOJ,QAAQC,GAAG,CAACI,SAAS;QAClCC,QAAQF,OAAOJ,QAAQC,GAAG,CAACI,SAAS,MAAM;QAC1CE,MAAM;YACJhC,MAAMyB,QAAQC,GAAG,CAACO,aAAa;YAC/BC,MAAMT,QAAQC,GAAG,CAACS,aAAa;QACjC;IACF;IAEA,MAAMC,YAAY,GAAGX,QAAQC,GAAG,CAACW,YAAY,CAAC,sBAAsB,EAAEjC,WAAW,OAAO,EAAEL,OAAO;IACjG,MAAMsB,YACHiB,QAAQ,CAAC;QACRC,MAAMd,QAAQC,GAAG,CAACO,aAAa;QAC/BO,IAAIzC;QACJ0C,SAAS;QACTC,MAAM,CAAC,kFAAkF,EAAEN,WAAW;QACtGO,MAAM,CAAC;;sBAES,EAAEP,UAAU;mDACiB,CAAC;IAChD,GACCnB,KAAK,CAACC,CAAAA;QACL,MAAMf,IAAAA,aAAK,EAAC,yBAAyB;YACnCA,OAAO;YACPgB,SAASD,IAAIE,OAAO;QACtB;IACF;IAEF,OAAO;QAAEwB,SAAS;QAAMxB,SAAS;IAA6B;AAChE"}