{"version":3,"sources":["../../../src/services/auth/recover-password.ts"],"sourcesContent":["import { error } from 'elysia'\n\nimport nodemailer from 'nodemailer'\nimport crypto from 'crypto'\n\nimport { User } from '@/models/User'\n\nconst DAY = 3_600_000\n\nexport const recoverPasswordService = async (email: string) => {\n  const user = await User.findOne({ email })\n\n  if (!user) {\n    throw error('Not Found', { error: 'Usuário não encontrado' })\n  }\n\n  const resetToken = crypto.randomBytes(32).toString('hex')\n\n  const hashedToken = await Bun.password.hash(resetToken)\n\n  user.resetPasswordToken = hashedToken\n  user.resetPasswordExpires = new Date(Date.now() + DAY * 0.5) // 30 minutes\n\n  await user.save().catch(err => {\n    throw error('Internal Server Error', {\n      error: 'Erro ao salvar informações do token',\n      details: err.message\n    })\n  })\n\n  const transporter = nodemailer.createTransport({\n    host: process.env.MAIL_HOST,\n    port: Number(process.env.MAIL_PORT),\n    secure: Number(process.env.MAIL_PORT) === 465,\n    auth: {\n      user: process.env.MAIL_USERNAME,\n      pass: process.env.MAIL_PASSWORD\n    }\n  })\n\n  const resetLink = `${process.env.FRONTEND_URL}/reset-password?token=${resetToken}&email=${email}`\n  await transporter\n    .sendMail({\n      from: process.env.MAIL_USERNAME,\n      to: email,\n      subject: 'Solicitação de redefinição de senha',\n      text: `Você solicitou uma redefinição de senha. Clique no link para redefinir sua senha: ${resetLink}`,\n      html: `<p>Você solicitou uma redefinição de senha.</p>\n             <p>Clique no link abaixo para redefinir sua senha:</p>\n             <a href=\"${resetLink}\">Redefinir senha</a>\n             <p>O link é válido por 30 minutos.</p>`\n    })\n    .catch(err => {\n      throw error('Internal Server Error', {\n        error: 'Falha ao enviar e-mail',\n        details: err.message\n      })\n    })\n\n  return { success: true, message: 'E-mail enviado com sucesso' }\n}\n"],"names":["recoverPasswordService","DAY","email","user","User","findOne","error","resetToken","crypto","randomBytes","toString","hashedToken","Bun","password","hash","resetPasswordToken","resetPasswordExpires","Date","now","save","catch","err","details","message","transporter","nodemailer","createTransport","host","process","env","MAIL_HOST","port","Number","MAIL_PORT","secure","auth","MAIL_USERNAME","pass","MAIL_PASSWORD","resetLink","FRONTEND_URL","sendMail","from","to","subject","text","html","success"],"mappings":"oGASaA,gEAAAA,gDATS,0EAEC,2EACJ,+BAEE,yGAErB,MAAMC,IAAM,KAEL,MAAMD,uBAAyB,MAAOE,QAC3C,MAAMC,KAAO,MAAMC,UAAI,CAACC,OAAO,CAAC,CAAEH,KAAM,GAExC,GAAI,CAACC,KAAM,CACT,KAAMG,GAAAA,aAAK,EAAC,YAAa,CAAEA,MAAO,wBAAyB,EAC7D,CAEA,MAAMC,WAAaC,eAAM,CAACC,WAAW,CAAC,IAAIC,QAAQ,CAAC,OAEnD,MAAMC,YAAc,MAAMC,IAAIC,QAAQ,CAACC,IAAI,CAACP,WAE5CJ,CAAAA,KAAKY,kBAAkB,CAAGJ,WAC1BR,CAAAA,KAAKa,oBAAoB,CAAG,IAAIC,KAAKA,KAAKC,GAAG,GAAKjB,IAAM,GAExD,OAAME,KAAKgB,IAAI,GAAGC,KAAK,CAACC,MACtB,KAAMf,GAAAA,aAAK,EAAC,wBAAyB,CACnCA,MAAO,sCACPgB,QAASD,IAAIE,OAAO,AACtB,EACF,GAEA,MAAMC,YAAcC,mBAAU,CAACC,eAAe,CAAC,CAC7CC,KAAMC,QAAQC,GAAG,CAACC,SAAS,CAC3BC,KAAMC,OAAOJ,QAAQC,GAAG,CAACI,SAAS,EAClCC,OAAQF,OAAOJ,QAAQC,GAAG,CAACI,SAAS,IAAM,IAC1CE,KAAM,CACJhC,KAAMyB,QAAQC,GAAG,CAACO,aAAa,CAC/BC,KAAMT,QAAQC,GAAG,CAACS,aAAa,AACjC,CACF,GAEA,MAAMC,UAAY,CAAC,EAAEX,QAAQC,GAAG,CAACW,YAAY,CAAC,sBAAsB,EAAEjC,WAAW,OAAO,EAAEL,MAAM,CAAC,AACjG,OAAMsB,YACHiB,QAAQ,CAAC,CACRC,KAAMd,QAAQC,GAAG,CAACO,aAAa,CAC/BO,GAAIzC,MACJ0C,QAAS,sCACTC,KAAM,CAAC,2FAAkF,EAAEN,UAAU,CAAC,CACtGO,KAAM,CAAC;AACb;AACA,sBAAsB,EAAEP,UAAU;AAClC,yDAAmD,CAAC,AAChD,GACCnB,KAAK,CAACC,MACL,KAAMf,GAAAA,aAAK,EAAC,wBAAyB,CACnCA,MAAO,yBACPgB,QAASD,IAAIE,OAAO,AACtB,EACF,GAEF,MAAO,CAAEwB,QAAS,KAAMxB,QAAS,4BAA6B,CAChE"}