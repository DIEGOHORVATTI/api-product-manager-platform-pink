{"version":3,"sources":["../../../src/services/auth/sign.ts"],"sourcesContent":["import { error } from 'elysia'\n\nimport { User, IUser } from '@/models/User'\n\nexport const signService = async ({ email, password }: Pick<IUser, 'email' | 'password'>) => {\n  const user = await User.findOne({ email })\n\n  if (!user) {\n    throw error('Unauthorized', { error: 'E-mail não cadastrado' })\n  }\n\n  const isValidPassword = await user.comparePassword(password)\n\n  if (!isValidPassword) {\n    throw error('Unauthorized', { error: 'Senha inválida' })\n  }\n\n  return user\n}\n"],"names":["signService","email","password","user","User","findOne","error","isValidPassword","comparePassword"],"mappings":"oGAIaA,qDAAAA,qCAJS,8BAEM,qBAErB,MAAMA,YAAc,MAAO,CAAEC,KAAK,CAAEC,QAAQ,CAAqC,IACtF,MAAMC,KAAO,MAAMC,UAAI,CAACC,OAAO,CAAC,CAAEJ,KAAM,GAExC,GAAI,CAACE,KAAM,CACT,KAAMG,GAAAA,aAAK,EAAC,eAAgB,CAAEA,MAAO,uBAAwB,EAC/D,CAEA,MAAMC,gBAAkB,MAAMJ,KAAKK,eAAe,CAACN,UAEnD,GAAI,CAACK,gBAAiB,CACpB,KAAMD,GAAAA,aAAK,EAAC,eAAgB,CAAEA,MAAO,gBAAiB,EACxD,CAEA,OAAOH,IACT"}