{"version":3,"sources":["../../../src/services/users/create.ts"],"sourcesContent":["import { IUser, User } from '@/models/User'\nimport { error } from 'elysia'\n\nexport const createUserService = async (data: Omit<IUser, 'hashPassword' | 'comparePassword'>) => {\n  const existingUser = await User.findOne({ email: data.email })\n\n  if (existingUser) {\n    throw error('Conflict', { error: 'O usuário com este e-mail já existe' })\n  }\n\n  const userInstance = new User(data)\n  userInstance.password = await userInstance.hashPassword()\n\n  await userInstance.save().catch(err => {\n    throw error('Internal Server Error', {\n      error: 'Falha ao criar usuário',\n      details: err.message\n    })\n  })\n\n  const { password, ...user } = userInstance.toObject()\n\n  return { user }\n}\n"],"names":["createUserService","data","existingUser","User","findOne","email","error","userInstance","password","hashPassword","save","catch","err","details","message","user","toObject"],"mappings":";;;;+BAGaA;;;eAAAA;;;sBAHe;wBACN;AAEf,MAAMA,oBAAoB,OAAOC;IACtC,MAAMC,eAAe,MAAMC,UAAI,CAACC,OAAO,CAAC;QAAEC,OAAOJ,KAAKI,KAAK;IAAC;IAE5D,IAAIH,cAAc;QAChB,MAAMI,IAAAA,aAAK,EAAC,YAAY;YAAEA,OAAO;QAAsC;IACzE;IAEA,MAAMC,eAAe,IAAIJ,UAAI,CAACF;IAC9BM,aAAaC,QAAQ,GAAG,MAAMD,aAAaE,YAAY;IAEvD,MAAMF,aAAaG,IAAI,GAAGC,KAAK,CAACC,CAAAA;QAC9B,MAAMN,IAAAA,aAAK,EAAC,yBAAyB;YACnCA,OAAO;YACPO,SAASD,IAAIE,OAAO;QACtB;IACF;IAEA,MAAM,EAAEN,QAAQ,EAAE,GAAGO,MAAM,GAAGR,aAAaS,QAAQ;IAEnD,OAAO;QAAED;IAAK;AAChB"}