{"version":3,"sources":["../../../src/services/users/create.ts"],"sourcesContent":["import { IUser, User } from '@/models/User'\nimport { error } from 'elysia'\n\nexport const createUserService = async (data: Omit<IUser, 'hashPassword' | 'comparePassword'>) => {\n  const existingUser = await User.findOne({ email: data.email })\n\n  if (existingUser) {\n    throw error('Conflict', { error: 'O usuário com este e-mail já existe' })\n  }\n\n  const userInstance = new User(data)\n  userInstance.password = await userInstance.hashPassword()\n\n  await userInstance.save().catch(err => {\n    throw error('Internal Server Error', {\n      error: 'Falha ao criar usuário',\n      details: err.message\n    })\n  })\n\n  const { password, ...user } = userInstance.toObject()\n\n  return { user }\n}\n"],"names":["createUserService","data","existingUser","User","findOne","email","error","userInstance","password","hashPassword","save","catch","err","details","message","user","toObject"],"mappings":"oGAGaA,2DAAAA,yCAHe,2CACN,UAEf,MAAMA,kBAAoB,MAAOC,OACtC,MAAMC,aAAe,MAAMC,UAAI,CAACC,OAAO,CAAC,CAAEC,MAAOJ,KAAKI,KAAK,AAAC,GAE5D,GAAIH,aAAc,CAChB,KAAMI,GAAAA,aAAK,EAAC,WAAY,CAAEA,MAAO,qCAAsC,EACzE,CAEA,MAAMC,aAAe,IAAIJ,UAAI,CAACF,KAC9BM,CAAAA,aAAaC,QAAQ,CAAG,MAAMD,aAAaE,YAAY,EAEvD,OAAMF,aAAaG,IAAI,GAAGC,KAAK,CAACC,MAC9B,KAAMN,GAAAA,aAAK,EAAC,wBAAyB,CACnCA,MAAO,yBACPO,QAASD,IAAIE,OAAO,AACtB,EACF,GAEA,KAAM,CAAEN,QAAQ,CAAE,GAAGO,KAAM,CAAGR,aAAaS,QAAQ,GAEnD,MAAO,CAAED,IAAK,CAChB"}