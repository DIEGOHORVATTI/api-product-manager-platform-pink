{"version":3,"sources":["../../../src/services/users/create.ts"],"sourcesContent":["import { IUser, User } from '@/models/User'\nimport { error } from 'elysia'\n\nexport const createUserService = async (data: IUser) => {\n  const existingUser = await User.findOne({ email: data.email })\n\n  if (existingUser) {\n    throw error('Conflict', { error: 'O usuário com este e-mail já existe' })\n  }\n\n  const userInstance = new User(data)\n\n  if (userInstance.password) {\n    try {\n      userInstance.password = await Bun.password.hash(userInstance.password)\n    } catch (err) {\n      throw error('Internal Server Error', { error: 'Falha ao processar a senha' })\n    }\n  }\n\n  await userInstance.save().catch(err => {\n    throw error('Internal Server Error', {\n      error: 'Falha ao criar usuário',\n      details: err.message\n    })\n  })\n\n  const { password, ...user } = userInstance.toObject()\n\n  return { user }\n}\n"],"names":["createUserService","data","existingUser","User","findOne","email","error","userInstance","password","Bun","hash","err","save","catch","details","message","user","toObject"],"mappings":";;;;+BAGaA;;;eAAAA;;;sBAHe;wBACN;AAEf,MAAMA,oBAAoB,OAAOC;IACtC,MAAMC,eAAe,MAAMC,UAAI,CAACC,OAAO,CAAC;QAAEC,OAAOJ,KAAKI,KAAK;IAAC;IAE5D,IAAIH,cAAc;QAChB,MAAMI,IAAAA,aAAK,EAAC,YAAY;YAAEA,OAAO;QAAsC;IACzE;IAEA,MAAMC,eAAe,IAAIJ,UAAI,CAACF;IAE9B,IAAIM,aAAaC,QAAQ,EAAE;QACzB,IAAI;YACFD,aAAaC,QAAQ,GAAG,MAAMC,IAAID,QAAQ,CAACE,IAAI,CAACH,aAAaC,QAAQ;QACvE,EAAE,OAAOG,KAAK;YACZ,MAAML,IAAAA,aAAK,EAAC,yBAAyB;gBAAEA,OAAO;YAA6B;QAC7E;IACF;IAEA,MAAMC,aAAaK,IAAI,GAAGC,KAAK,CAACF,CAAAA;QAC9B,MAAML,IAAAA,aAAK,EAAC,yBAAyB;YACnCA,OAAO;YACPQ,SAASH,IAAII,OAAO;QACtB;IACF;IAEA,MAAM,EAAEP,QAAQ,EAAE,GAAGQ,MAAM,GAAGT,aAAaU,QAAQ;IAEnD,OAAO;QAAED;IAAK;AAChB"}