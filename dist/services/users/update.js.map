{"version":3,"sources":["../../../src/services/users/update.ts"],"sourcesContent":["import { IUser, User } from '@/models/User'\n\nimport { error } from 'elysia'\n\nexport const updateUserService = async (\n  id: string,\n  { email, password }: Omit<IUser, 'hashPassword' | 'comparePassword'>\n) => {\n  const newUser = await User.findById(id)\n\n  if (!newUser) {\n    throw error('Not Found', { error: 'Usuário não encontrado' })\n  }\n\n  if (email) {\n    const existingUser = await User.findOne({ email })\n\n    const isDifferentUser = existingUser?.id !== id\n\n    if (isDifferentUser) {\n      throw error('Conflict', { error: 'Esse e-mail já está em uso' })\n    }\n\n    newUser.email = email\n  }\n\n  if (password) {\n    newUser.password = password\n  }\n\n  await newUser?.save().catch(() => {\n    throw error('Internal Server Error', { error: 'Falha ao atualizar usuário' })\n  })\n\n  const { password: _password, ...user } = newUser.toObject()\n\n  return { user }\n}\n"],"names":["updateUserService","id","email","password","newUser","User","findById","error","existingUser","findOne","isDifferentUser","save","catch","_password","user","toObject"],"mappings":";;;;+BAIaA;;;eAAAA;;;sBAJe;wBAEN;AAEf,MAAMA,oBAAoB,OAC/BC,IACA,EAAEC,KAAK,EAAEC,QAAQ,EAAmD;IAEpE,MAAMC,UAAU,MAAMC,UAAI,CAACC,QAAQ,CAACL;IAEpC,IAAI,CAACG,SAAS;QACZ,MAAMG,IAAAA,aAAK,EAAC,aAAa;YAAEA,OAAO;QAAyB;IAC7D;IAEA,IAAIL,OAAO;QACT,MAAMM,eAAe,MAAMH,UAAI,CAACI,OAAO,CAAC;YAAEP;QAAM;QAEhD,MAAMQ,kBAAkBF,cAAcP,OAAOA;QAE7C,IAAIS,iBAAiB;YACnB,MAAMH,IAAAA,aAAK,EAAC,YAAY;gBAAEA,OAAO;YAA6B;QAChE;QAEAH,QAAQF,KAAK,GAAGA;IAClB;IAEA,IAAIC,UAAU;QACZC,QAAQD,QAAQ,GAAGA;IACrB;IAEA,MAAMC,SAASO,OAAOC,MAAM;QAC1B,MAAML,IAAAA,aAAK,EAAC,yBAAyB;YAAEA,OAAO;QAA6B;IAC7E;IAEA,MAAM,EAAEJ,UAAUU,SAAS,EAAE,GAAGC,MAAM,GAAGV,QAAQW,QAAQ;IAEzD,OAAO;QAAED;IAAK;AAChB"}