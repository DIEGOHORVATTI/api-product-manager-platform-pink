{"version":3,"sources":["../../../src/services/users/update.ts"],"sourcesContent":["import { IUser, User } from '@/models/User'\n\nimport { error } from 'elysia'\n\nexport const updateUserService = async (\n  id: string,\n  { email, password }: Omit<IUser, 'hashPassword' | 'comparePassword'>\n) => {\n  const newUser = await User.findById(id)\n\n  if (!newUser) {\n    throw error('Not Found', { error: 'Usuário não encontrado' })\n  }\n\n  if (email) {\n    const existingUser = await User.findOne({ email })\n\n    const isDifferentUser = existingUser?.id !== id\n\n    if (isDifferentUser) {\n      throw error('Conflict', { error: 'Esse e-mail já está em uso' })\n    }\n\n    newUser.email = email\n  }\n\n  if (password) {\n    newUser.password = password\n  }\n\n  await newUser?.save().catch(() => {\n    throw error('Internal Server Error', { error: 'Falha ao atualizar usuário' })\n  })\n\n  const { password: _password, ...user } = newUser.toObject()\n\n  return { user }\n}\n"],"names":["updateUserService","id","email","password","newUser","User","findById","error","existingUser","findOne","isDifferentUser","save","catch","_password","user","toObject"],"mappings":"oGAIaA,2DAAAA,yCAJe,2CAEN,UAEf,MAAMA,kBAAoB,MAC/BC,GACA,CAAEC,KAAK,CAAEC,QAAQ,CAAmD,IAEpE,MAAMC,QAAU,MAAMC,UAAI,CAACC,QAAQ,CAACL,IAEpC,GAAI,CAACG,QAAS,CACZ,KAAMG,GAAAA,aAAK,EAAC,YAAa,CAAEA,MAAO,wBAAyB,EAC7D,CAEA,GAAIL,MAAO,CACT,MAAMM,aAAe,MAAMH,UAAI,CAACI,OAAO,CAAC,CAAEP,KAAM,GAEhD,MAAMQ,gBAAkBF,cAAcP,KAAOA,GAE7C,GAAIS,gBAAiB,CACnB,KAAMH,GAAAA,aAAK,EAAC,WAAY,CAAEA,MAAO,4BAA6B,EAChE,CAEAH,QAAQF,KAAK,CAAGA,KAClB,CAEA,GAAIC,SAAU,CACZC,QAAQD,QAAQ,CAAGA,QACrB,CAEA,MAAMC,SAASO,OAAOC,MAAM,KAC1B,KAAML,GAAAA,aAAK,EAAC,wBAAyB,CAAEA,MAAO,4BAA6B,EAC7E,GAEA,KAAM,CAAEJ,SAAUU,SAAS,CAAE,GAAGC,KAAM,CAAGV,QAAQW,QAAQ,GAEzD,MAAO,CAAED,IAAK,CAChB"}