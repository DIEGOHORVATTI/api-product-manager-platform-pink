{"version":3,"sources":["../../src/middlewares/jwt.ts"],"sourcesContent":["import { Elysia, error, t } from 'elysia'\n\nimport { User } from '@/models/User'\n\nimport { jwtSettings } from '@/shared/jwt-settings'\n\nconst bearerTokenGuard = {\n  headers: t.Object({\n    authorization: t.String({ pattern: '^Bearer \\\\S+$' })\n  })\n}\n\nexport const jwt = new Elysia()\n  .use(jwtSettings)\n  .guard(bearerTokenGuard)\n  .derive(async ({ headers: { authorization }, jwt }) => {\n    if (!authorization) {\n      throw error('Unauthorized', { error: 'Nenhum token fornecido' })\n    }\n\n    const token = authorization.slice('Bearer '.length)\n    const decoded = await jwt.verify(token)\n\n    if (!decoded) {\n      throw error('Unauthorized', { error: 'Token inválido' })\n    }\n\n    const user = await User.findById(decoded.id)\n    if (!user) {\n      throw error('Unauthorized', { error: 'Usuário não encontrado' })\n    }\n\n    return { user }\n  })\n"],"names":["jwt","bearerTokenGuard","headers","t","Object","authorization","String","pattern","Elysia","use","jwtSettings","guard","derive","error","token","slice","length","decoded","verify","user","User","findById","id"],"mappings":"oGAYaA,6CAAAA,6BAZoB,8BAEZ,6CAEO,0BAE5B,MAAMC,iBAAmB,CACvBC,QAASC,SAAC,CAACC,MAAM,CAAC,CAChBC,cAAeF,SAAC,CAACG,MAAM,CAAC,CAAEC,QAAS,eAAgB,EACrD,EACF,EAEO,MAAMP,IAAM,IAAIQ,cAAM,GAC1BC,GAAG,CAACC,wBAAW,EACfC,KAAK,CAACV,kBACNW,MAAM,CAAC,MAAO,CAAEV,QAAS,CAAEG,aAAa,CAAE,CAAEL,GAAG,CAAE,IAChD,GAAI,CAACK,cAAe,CAClB,KAAMQ,GAAAA,aAAK,EAAC,eAAgB,CAAEA,MAAO,wBAAyB,EAChE,CAEA,MAAMC,MAAQT,cAAcU,KAAK,CAAC,UAAUC,MAAM,EAClD,MAAMC,QAAU,MAAMjB,IAAIkB,MAAM,CAACJ,OAEjC,GAAI,CAACG,QAAS,CACZ,KAAMJ,GAAAA,aAAK,EAAC,eAAgB,CAAEA,MAAO,gBAAiB,EACxD,CAEA,MAAMM,KAAO,MAAMC,UAAI,CAACC,QAAQ,CAACJ,QAAQK,EAAE,EAC3C,GAAI,CAACH,KAAM,CACT,KAAMN,GAAAA,aAAK,EAAC,eAAgB,CAAEA,MAAO,wBAAyB,EAChE,CAEA,MAAO,CAAEM,IAAK,CAChB"}