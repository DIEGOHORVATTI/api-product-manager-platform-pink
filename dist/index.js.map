{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { Elysia } from 'elysia'\nimport { cors } from '@elysiajs/cors'\nimport { swagger } from '@elysiajs/swagger'\n\nimport { readdirSync } from 'fs'\nimport { join } from 'path'\n\nimport { PORT } from '@/constants/config'\n\nconst server = new Elysia()\n  .use(cors())\n  .use(swagger())\n  .get('/', () => 'API is running ðŸš€')\n\nconst routesPath = join(__dirname, 'routes')\nreaddirSync(routesPath).forEach(async file => {\n  if (file.endsWith('.routes.ts')) {\n    const routeModule = await import(join(routesPath, file))\n\n    server.use(routeModule.default)\n  }\n})\n\nserver.listen(PORT, ({ url }) => {\n  console.log(`ðŸ¦Š Elysia is running at ${url}`)\n})\n"],"names":["server","Elysia","use","cors","swagger","get","routesPath","join","__dirname","readdirSync","forEach","file","endsWith","routeModule","default","listen","PORT","url","console","log"],"mappings":";;;;wBAAuB;sBACF;yBACG;oBAEI;sBACP;wBAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAErB,MAAMA,SAAS,IAAIC,cAAM,GACtBC,GAAG,CAACC,IAAAA,UAAI,KACRD,GAAG,CAACE,IAAAA,gBAAO,KACXC,GAAG,CAAC,KAAK,IAAM;AAElB,MAAMC,aAAaC,IAAAA,UAAI,EAACC,WAAW;AACnCC,IAAAA,eAAW,EAACH,YAAYI,OAAO,CAAC,OAAMC;IACpC,IAAIA,KAAKC,QAAQ,CAAC,eAAe;QAC/B,MAAMC,cAAc,MAAM,gBAAON,IAAAA,UAAI,EAACD,YAAYK,yDAAxB;QAE1BX,OAAOE,GAAG,CAACW,YAAYC,OAAO;IAChC;AACF;AAEAd,OAAOe,MAAM,CAACC,YAAI,EAAE,CAAC,EAAEC,GAAG,EAAE;IAC1BC,QAAQC,GAAG,CAAC,CAAC,wBAAwB,EAAEF,KAAK;AAC9C"}