{"version":3,"sources":["../../src/routes/auth.routes.ts"],"sourcesContent":["import { Elysia, t as Type } from 'elysia'\n\nimport { UserCredentialsSchema } from '@/models/User'\n\nimport { signService } from '@/services/auth/sign'\nimport { recoverPasswordService } from '@/services/auth/recover-password'\n\nimport { jwtSettings } from '@/shared/jwt-settings'\n\nconst router = new Elysia().group('/auth', server =>\n  server\n    .use(jwtSettings)\n    .post(\n      '/login',\n      async ({ body, jwt }) => {\n        const user = await signService(body)\n\n        const token = await jwt.sign({ id: user.id })\n\n        return { token }\n      },\n      { body: Type.Object(UserCredentialsSchema) }\n    )\n    .post(\n      '/recover-password',\n      async ({ body: { email } }) => {\n        await recoverPasswordService(email)\n\n        return { message: 'Recovery email sent successfully' }\n      },\n      {\n        body: Type.Object({ email: UserCredentialsSchema.email })\n      }\n    )\n)\n\nexport default router\n"],"names":["router","Elysia","group","server","use","jwtSettings","post","body","jwt","user","signService","token","sign","id","Type","Object","UserCredentialsSchema","email","recoverPasswordService","message"],"mappings":"oGAoCA,iDAAA,kCApCkC,8BAEI,sCAEV,wDACW,gEAEX,0BAE5B,MAAMA,OAAS,IAAIC,cAAM,GAAGC,KAAK,CAAC,QAASC,QACzCA,OACGC,GAAG,CAACC,wBAAW,EACfC,IAAI,CACH,SACA,MAAO,CAAEC,IAAI,CAAEC,GAAG,CAAE,IAClB,MAAMC,KAAO,MAAMC,GAAAA,iBAAW,EAACH,MAE/B,MAAMI,MAAQ,MAAMH,IAAII,IAAI,CAAC,CAAEC,GAAIJ,KAAKI,EAAE,AAAC,GAE3C,MAAO,CAAEF,KAAM,CACjB,EACA,CAAEJ,KAAMO,SAAI,CAACC,MAAM,CAACC,2BAAqB,CAAE,GAE5CV,IAAI,CACH,oBACA,MAAO,CAAEC,KAAM,CAAEU,KAAK,CAAE,CAAE,IACxB,MAAMC,GAAAA,uCAAsB,EAACD,OAE7B,MAAO,CAAEE,QAAS,kCAAmC,CACvD,EACA,CACEZ,KAAMO,SAAI,CAACC,MAAM,CAAC,CAAEE,MAAOD,2BAAqB,CAACC,KAAK,AAAC,EACzD,UAIN,SAAejB"}