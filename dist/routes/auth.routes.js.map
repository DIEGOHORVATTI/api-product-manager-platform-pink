{"version":3,"sources":["../../src/routes/auth.routes.ts"],"sourcesContent":["import { Elysia, t as Type } from 'elysia'\n\nimport { UserCredentialsSchema } from '@/models/User'\n\nimport { signService } from '@/services/auth/sign'\nimport { recoverPasswordService } from '@/services/auth/recover-password'\n\nimport { jwtSettings } from '@/shared/jwt-settings'\n\nconst router = new Elysia().group('/auth', server =>\n  server\n    .use(jwtSettings)\n    .post(\n      '/login',\n      async ({ body, jwt }) => {\n        const user = await signService(body)\n\n        const token = await jwt.sign({ id: user.id })\n\n        return { token }\n      },\n      { body: Type.Object(UserCredentialsSchema) }\n    )\n    .post(\n      '/recover-password',\n      async ({ body: { email } }) => {\n        await recoverPasswordService(email)\n\n        return { message: 'Recovery email sent successfully' }\n      },\n      {\n        body: Type.Object(UserCredentialsSchema.email)\n      }\n    )\n)\n\nexport default router\n"],"names":["router","Elysia","group","server","use","jwtSettings","post","body","jwt","user","signService","token","sign","id","Type","Object","UserCredentialsSchema","email","recoverPasswordService","message"],"mappings":";;;;+BAoCA;;;eAAA;;;wBApCkC;sBAEI;sBAEV;iCACW;6BAEX;AAE5B,MAAMA,SAAS,IAAIC,cAAM,GAAGC,KAAK,CAAC,SAASC,CAAAA,SACzCA,OACGC,GAAG,CAACC,wBAAW,EACfC,IAAI,CACH,UACA,OAAO,EAAEC,IAAI,EAAEC,GAAG,EAAE;QAClB,MAAMC,OAAO,MAAMC,IAAAA,iBAAW,EAACH;QAE/B,MAAMI,QAAQ,MAAMH,IAAII,IAAI,CAAC;YAAEC,IAAIJ,KAAKI,EAAE;QAAC;QAE3C,OAAO;YAAEF;QAAM;IACjB,GACA;QAAEJ,MAAMO,SAAI,CAACC,MAAM,CAACC,2BAAqB;IAAE,GAE5CV,IAAI,CACH,qBACA,OAAO,EAAEC,MAAM,EAAEU,KAAK,EAAE,EAAE;QACxB,MAAMC,IAAAA,uCAAsB,EAACD;QAE7B,OAAO;YAAEE,SAAS;QAAmC;IACvD,GACA;QACEZ,MAAMO,SAAI,CAACC,MAAM,CAACC,2BAAqB,CAACC,KAAK;IAC/C;MAIN,WAAejB"}