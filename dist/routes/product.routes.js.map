{"version":3,"sources":["../../src/routes/product.routes.ts"],"sourcesContent":["import { Elysia } from 'elysia'\nimport { ProductSchema } from '@/models/Product'\nimport { jwt } from '@/middlewares/jwt'\nimport { \n  getAllProductsService,\n  getOneProductService,\n  createProductService,\n  updateProductService,\n  deleteProductService,\n  generateQRCodeService\n} from '@/services/products'\n\nconst router = new Elysia().group('/products', server =>\n  server\n    .use(jwt)\n    .get('/', async () => {\n      const products = await getAllProductsService()\n      return { message: 'Products found successfully', products }\n    })\n    .get('/:id', async ({ params: { id } }) => {\n      const product = await getOneProductService(id)\n      return { message: 'Product found successfully', product }\n    })\n    .post(\n      '/',\n      async ({ body, user }) => {\n        const product = await createProductService(body, user)\n        return { message: 'Product created successfully', product }\n      },\n      ProductSchema\n    )\n    .put(\n      '/:id',\n      async ({ params: { id }, body, user }) => {\n        const product = await updateProductService(id, body, user)\n        return { message: 'Product updated successfully', product }\n      },\n      ProductSchema\n    )\n    .delete('/:id', async ({ params: { id }, user }) => {\n      await deleteProductService(id, user)\n      return { message: 'Product deleted successfully' }\n    })\n    .post('/generate-qr/:id', async ({ params: { id } }) => {\n      const qrCode = await generateQRCodeService(id)\n      return { message: 'QR Code generated successfully', qrCode }\n    })\n)\n\nexport default router"],"names":["router","Elysia","group","server","use","jwt","get","products","getAllProductsService","message","params","id","product","getOneProductService","post","body","user","createProductService","ProductSchema","put","updateProductService","delete","deleteProductService","qrCode","generateQRCodeService"],"mappings":";;;;+BAiDA;;;eAAA;;;wBAjDuB;yBACO;qBACV;0BAQb;AAEP,MAAMA,SAAS,IAAIC,cAAM,GAAGC,KAAK,CAAC,aAAaC,CAAAA,SAC7CA,OACGC,GAAG,CAACC,QAAG,EACPC,GAAG,CAAC,KAAK;QACR,MAAMC,WAAW,MAAMC,IAAAA,+BAAqB;QAC5C,OAAO;YAAEC,SAAS;YAA+BF;QAAS;IAC5D,GACCD,GAAG,CAAC,QAAQ,OAAO,EAAEI,QAAQ,EAAEC,EAAE,EAAE,EAAE;QACpC,MAAMC,UAAU,MAAMC,IAAAA,8BAAoB,EAACF;QAC3C,OAAO;YAAEF,SAAS;YAA8BG;QAAQ;IAC1D,GACCE,IAAI,CACH,KACA,OAAO,EAAEC,IAAI,EAAEC,IAAI,EAAE;QACnB,MAAMJ,UAAU,MAAMK,IAAAA,8BAAoB,EAACF,MAAMC;QACjD,OAAO;YAAEP,SAAS;YAAgCG;QAAQ;IAC5D,GACAM,sBAAa,EAEdC,GAAG,CACF,QACA,OAAO,EAAET,QAAQ,EAAEC,EAAE,EAAE,EAAEI,IAAI,EAAEC,IAAI,EAAE;QACnC,MAAMJ,UAAU,MAAMQ,IAAAA,8BAAoB,EAACT,IAAII,MAAMC;QACrD,OAAO;YAAEP,SAAS;YAAgCG;QAAQ;IAC5D,GACAM,sBAAa,EAEdG,MAAM,CAAC,QAAQ,OAAO,EAAEX,QAAQ,EAAEC,EAAE,EAAE,EAAEK,IAAI,EAAE;QAC7C,MAAMM,IAAAA,8BAAoB,EAACX,IAAIK;QAC/B,OAAO;YAAEP,SAAS;QAA+B;IACnD,GACCK,IAAI,CAAC,oBAAoB,OAAO,EAAEJ,QAAQ,EAAEC,EAAE,EAAE,EAAE;QACjD,MAAMY,SAAS,MAAMC,IAAAA,+BAAqB,EAACb;QAC3C,OAAO;YAAEF,SAAS;YAAkCc;QAAO;IAC7D;MAGJ,WAAevB"}